# 예제 1
# 개미 전사_ 일직선상 존재하는 식량창고 중에서 서로 인접한 식량창고는 약탈할 수 없다. 얻을 수 있는 식량의 최댓값
# ex) [1, 3, 1, 5] -> 답은 8

# 풀이 아이디어: 왼쪽부터 차례대로 식량창고를 턴다고 가정. i번째 창고에 대해서 약탈할지, 안 할지의 여부 결정함
n = int(input())
food = list(map(int, input().split()))

d = [0] * 100 # 앞서 계산된 결과를 저장하기 위한 DP 테이블 초기화 / 3 <= n <= 100 이므로 100을 곱해 초기화

d[0] = food[0] # 제일 왼쪽의 식량 개수
d[1] = max(food[0], food[1]) # 바로 옆 식량창고의 식량은 약탈할 수 없다. 따라서, 제일 왼쪽과 그 옆의 식량창고 중 더 식량이 많은 쪽을 택한다.

for i in range(2, n):
    d[i] = max(d[i - 1], d[i - 2] + food[i]) # i번째 위치까지의 최적의 값은 i - 1 번째와 i - 2 + 현재 위치 값 중 더 큰 값이다.

print(d[n - 1]) # 최종 구해진 값
